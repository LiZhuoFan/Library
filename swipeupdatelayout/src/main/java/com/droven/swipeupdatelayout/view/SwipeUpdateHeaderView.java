package com.droven.swipeupdatelayout.view;import android.support.annotation.DrawableRes;import android.text.TextUtils;import android.view.View;import android.widget.TextView;import com.droven.swipeupdatelayout.R;import com.droven.swipeupdatelayout.base.BaseRefreshView;public class SwipeUpdateHeaderView extends BaseRefreshView {    private HeaderRefreshIcon headerIcon;    private TextView headerTv;    private int maxCanRefreshHeight = 0;    private String normalText = "下拉刷新";    private String canRefreshText = "释放刷新";    private String refreshingText = "正在刷新";    private String completeText = "刷新成功";    @Override    protected int layoutResId() {        return R.layout.header_view;    }    @Override    protected void initView(View view) {        headerIcon = view.findViewById(R.id.header_refresh_icon);        headerTv = view.findViewById(R.id.header_tv);    }    @Override    public int canRefreshHeight() {        if (maxCanRefreshHeight == 0) {            maxCanRefreshHeight = getViewVerticalSpace(headerIcon) + getViewVerticalSpace(headerTv);        }        return maxCanRefreshHeight;    }    @Override    public void onNormal() {        headerTv.setText(normalText);    }    @Override    public void onCanRefresh() {        headerTv.setText(canRefreshText);    }    @Override    public void onRefreshing() {        headerTv.setText(refreshingText);        headerIcon.startAnim();    }    @Override    public void onComplete() {        headerTv.setText(completeText);        headerIcon.stopAnim();    }    @Override    public void onDragging(int top) {        headerIcon.dragging(top, maxDragHeight());    }    public void setValue(@DrawableRes int headerIconId, String normalText, String canRefreshText,                         String refreshingText, String completeText) {        if (headerIconId != -1) {            headerIcon.initIcon(headerIconId);        }        if (!TextUtils.isEmpty(normalText)) {            this.normalText = normalText;            headerTv.setText(this.normalText);        }        if (!TextUtils.isEmpty(canRefreshText)) {            this.canRefreshText = canRefreshText;        }        if (!TextUtils.isEmpty(refreshingText)) {            this.refreshingText = refreshingText;        }        if (!TextUtils.isEmpty(completeText)) {            this.completeText = completeText;        }    }}