package com.droven.swipeupdatelayout.view;import android.animation.ValueAnimator;import android.graphics.drawable.Drawable;import android.text.TextUtils;import android.view.View;import android.view.animation.LinearInterpolator;import android.widget.ImageView;import android.widget.TextView;import com.droven.swipeupdatelayout.R;import com.droven.swipeupdatelayout.base.BaseRefreshView;public class SwipeUpdateFooterView extends BaseRefreshView {    private ImageView footerIv;    private TextView footerTv;    private int maxCanRefreshHeight = 0;    private ValueAnimator valueAnimator;    private String normalText = "上拉加载更多";    private String canRefreshText = "释放加载更多";    private String refreshingText = "正在加载更多";    private String completeText = "加载更多成功";    @Override    protected int layoutResId() {        return R.layout.footer_view;    }    @Override    protected void initView(View view) {        footerIv = view.findViewById(R.id.footer_iv);        footerTv = view.findViewById(R.id.footer_tv);    }    @Override    public int canRefreshHeight() {        if (maxCanRefreshHeight == 0) {            maxCanRefreshHeight = Math.max(getViewVerticalSpace(footerTv), getViewVerticalSpace(footerIv));        }        return maxCanRefreshHeight;    }    @Override    public void onNormal() {        footerTv.setText(normalText);    }    @Override    public void onCanRefresh() {        footerTv.setText(canRefreshText);    }    @Override    public void onRefreshing() {        footerTv.setText(refreshingText);        if (valueAnimator == null) {            valueAnimator = ValueAnimator.ofFloat(0, 360);            valueAnimator.setInterpolator(new LinearInterpolator());            valueAnimator.setRepeatCount(ValueAnimator.INFINITE);            valueAnimator.setRepeatMode(ValueAnimator.RESTART);            valueAnimator.setDuration(1500);            valueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {                @Override                public void onAnimationUpdate(ValueAnimator animation) {                    footerIv.setRotation((Float) animation.getAnimatedValue());                }            });        }        valueAnimator.start();    }    @Override    public void onComplete() {        footerTv.setText(completeText);        valueAnimator.cancel();    }    @Override    public void onDragging(int top) {        final int curPos = Math.abs(top);        footerIv.setRotation(curPos % 360);    }    public void setValue(Drawable footerIcon, String normalText, String canRefreshText,                         String refreshingText, String completeText) {        if (footerIcon != null) {            footerIv.setImageDrawable(footerIcon);        }        if (!TextUtils.isEmpty(normalText)) {            this.normalText = normalText;            footerTv.setText(this.normalText);        }        if (!TextUtils.isEmpty(canRefreshText)) {            this.canRefreshText = canRefreshText;        }        if (!TextUtils.isEmpty(refreshingText)) {            this.refreshingText = refreshingText;        }        if (!TextUtils.isEmpty(completeText)) {            this.completeText = completeText;        }    }}